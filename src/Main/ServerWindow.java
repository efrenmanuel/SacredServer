/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import Local.Server.LocalServer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author efren
 */
public class ServerWindow extends javax.swing.JFrame {

    /**
     * Creates new form ServerWindow
     */
    public ServerWindow() {
        initComponents();
        running = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        maxPlayersSLider = new javax.swing.JSlider();
        serverLabel = new javax.swing.JLabel();
        serverNameField = new javax.swing.JTextField();
        serverNameLabel = new javax.swing.JLabel();
        maxPlayersLabel = new javax.swing.JLabel();
        maxPlayersField = new javax.swing.JLabel();
        serverPortLabel = new javax.swing.JLabel();
        serverPortField = new javax.swing.JFormattedTextField();
        lobbyTag = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lobbyAddress = new javax.swing.JTextField();
        lobbyPort = new javax.swing.JFormattedTextField();
        lobbyAddressLabel = new javax.swing.JLabel();
        lobbyPortLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientsTable = new javax.swing.JTable();
        clientLabel = new javax.swing.JLabel();
        startButton = new javax.swing.JToggleButton();
        clientPortLabel = new javax.swing.JLabel();
        ClientPortField = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        maxPlayersSLider.setMajorTickSpacing(3);
        maxPlayersSLider.setMaximum(16);
        maxPlayersSLider.setMinimum(4);
        maxPlayersSLider.setMinorTickSpacing(1);
        maxPlayersSLider.setPaintLabels(true);
        maxPlayersSLider.setPaintTicks(true);
        maxPlayersSLider.setSnapToTicks(true);
        maxPlayersSLider.setToolTipText("");
        maxPlayersSLider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxPlayersSLiderStateChanged(evt);
            }
        });

        serverLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        serverLabel.setText("Server");

        serverNameField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        serverNameField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        serverNameField.setText("Sacred Server");
        serverNameField.setToolTipText("");
        serverNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverNameFieldActionPerformed(evt);
            }
        });

        serverNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        serverNameLabel.setText("Server Name");

        maxPlayersLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        maxPlayersLabel.setText("Maximum players");

        maxPlayersField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        maxPlayersField.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        maxPlayersField.setText("16");

        serverPortLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        serverPortLabel.setText("Listening Port");

        serverPortField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        serverPortField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        serverPortField.setText("2003");
        serverPortField.setToolTipText("");
        serverPortField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lobbyTag.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lobbyTag.setText("Lobby");

        lobbyAddress.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lobbyAddress.setText("efrenmanuel.es");
        lobbyAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lobbyAddressActionPerformed(evt);
            }
        });

        lobbyPort.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        lobbyPort.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        lobbyPort.setText("2004");
        lobbyPort.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lobbyAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lobbyAddressLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lobbyAddressLabel.setText("Lobby Address (or IP)");

        lobbyPortLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lobbyPortLabel.setText("Port of the lobby");

        clientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Remote IP", "Local port"
            }
        ));
        jScrollPane1.setViewportView(clientsTable);

        clientLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        clientLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clientLabel.setText("Clients");

        startButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startButton.setText("Start");
        startButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                startButtonStateChanged(evt);
            }
        });

        clientPortLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clientPortLabel.setText("Starting Client Port");

        ClientPortField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        ClientPortField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        ClientPortField.setText("2010");
        ClientPortField.setToolTipText("First port to assign to the first client, increments one per client.");
        ClientPortField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ClientPortField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientPortFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxPlayersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maxPlayersSLider, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serverPortLabel)
                            .addComponent(serverPortField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientPortLabel)
                            .addComponent(ClientPortField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(serverLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                                    .addComponent(serverNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(maxPlayersField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(serverNameField))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(lobbyTag)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lobbyAddressLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lobbyPortLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lobbyAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lobbyPort, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(clientLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(serverLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(21, 21, 21)
                        .addComponent(serverNameLabel)
                        .addGap(18, 18, 18)
                        .addComponent(serverNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maxPlayersLabel)
                            .addComponent(maxPlayersField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(maxPlayersSLider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(serverPortLabel)
                        .addGap(18, 18, 18)
                        .addComponent(serverPortField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clientPortLabel)
                        .addGap(18, 18, 18)
                        .addComponent(ClientPortField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clientLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lobbyAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lobbyAddressLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lobbyPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lobbyPortLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lobbyTag)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void serverNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serverNameFieldActionPerformed

    private void maxPlayersSLiderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxPlayersSLiderStateChanged
        maxPlayersField.setText("" + maxPlayersSLider.getValue());

    }//GEN-LAST:event_maxPlayersSLiderStateChanged

    private void lobbyAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lobbyAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lobbyAddressActionPerformed

    private void ClientPortFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientPortFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClientPortFieldActionPerformed

    private void startButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_startButtonStateChanged
        if (running) {
            running = false;
        } else {
            running = true;
            try {
                server = new LocalServer(lobbyAddress.getText(), Integer.parseInt(lobbyPort.getText()), serverNameField.getText(),maxPlayersSLider.getValue() , Integer.parseInt(serverPortField.getText()));
            } catch (LocalServer.LobbyServerNotAvailable ex) {
                Logger.getLogger(ServerWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            server.run();
            Thread update = new Thread(() -> {
                while (running) {
                    updateClientTable();
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(LobbyWindow.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
            update.start();
        }
    }//GEN-LAST:event_startButtonStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        running = false;
    }//GEN-LAST:event_formWindowClosing
    
    public void updateClientTable(){
        DefaultTableModel table = (DefaultTableModel) clientsTable.getModel();
        table.setRowCount(0);
        if (server.getClients() != null) {
            for (String client : server.getClients().keySet()) {
                table.addRow(new Object[]{client, server.getClients().get(client)});
            }
        }
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField ClientPortField;
    private javax.swing.JLabel clientLabel;
    private javax.swing.JLabel clientPortLabel;
    private javax.swing.JTable clientsTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lobbyAddress;
    private javax.swing.JLabel lobbyAddressLabel;
    private javax.swing.JFormattedTextField lobbyPort;
    private javax.swing.JLabel lobbyPortLabel;
    private javax.swing.JLabel lobbyTag;
    private javax.swing.JLabel maxPlayersField;
    private javax.swing.JLabel maxPlayersLabel;
    private javax.swing.JSlider maxPlayersSLider;
    private javax.swing.JLabel serverLabel;
    private javax.swing.JTextField serverNameField;
    private javax.swing.JLabel serverNameLabel;
    private javax.swing.JFormattedTextField serverPortField;
    private javax.swing.JLabel serverPortLabel;
    private javax.swing.JToggleButton startButton;
    // End of variables declaration//GEN-END:variables
    private boolean running;
    private LocalServer server;
}
